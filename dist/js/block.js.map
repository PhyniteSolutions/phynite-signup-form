{"version":3,"file":"js/block.js","mappings":"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","sources":["webpack://phynite-signup-form/./assets/js/block.js"],"sourcesContent":["/**\n * Gutenberg Block for Phynite Signup Form\n */\n\n(function(wp) {\n    const { blocks, element, components, blockEditor, apiFetch, i18n, serverSideRender } = wp;\n    const { registerBlockType } = blocks;\n    const { createElement: el, Fragment, useState, useEffect } = element;\n    const { \n        PanelBody, \n        TextControl, \n        ToggleControl, \n        SelectControl, \n        ColorPicker, \n        RangeControl,\n        Notice,\n        Button,\n        Spinner\n    } = components;\n    const { InspectorControls, BlockControls } = blockEditor;\n    const { __ } = i18n;\n    const ServerSideRender = serverSideRender || wp.components.ServerSideRender;\n    \n    registerBlockType('phynite/signup-form', {\n        title: __('Phynite Signup Form', 'phynite-signup-form'),\n        description: __('Add a Phynite Analytics signup form to your page', 'phynite-signup-form'),\n        icon: 'chart-line',\n        category: 'widgets',\n        keywords: [\n            __('phynite', 'phynite-signup-form'),\n            __('analytics', 'phynite-signup-form'),\n            __('signup', 'phynite-signup-form'),\n            __('form', 'phynite-signup-form')\n        ],\n        supports: {\n            align: ['left', 'center', 'right', 'wide', 'full'],\n            className: true,\n            customClassName: true,\n        },\n        attributes: {\n            title: {\n                type: 'string',\n                default: __('Get Started with Phynite Analytics', 'phynite-signup-form')\n            },\n            subtitle: {\n                type: 'string',\n                default: __('Enter your details below to begin tracking your analytics.', 'phynite-signup-form')\n            },\n            showTitle: {\n                type: 'boolean',\n                default: true\n            },\n            showSubtitle: {\n                type: 'boolean',\n                default: true\n            },\n            showLogo: {\n                type: 'boolean',\n                default: false\n            },\n            formStyle: {\n                type: 'string',\n                default: 'default'\n            },\n            primaryColor: {\n                type: 'string',\n                default: '#007cba'\n            },\n            buttonText: {\n                type: 'string',\n                default: __('Continue to Payment', 'phynite-signup-form')\n            },\n            showPlanSelection: {\n                type: 'boolean',\n                default: true\n            },\n            defaultPlan: {\n                type: 'string',\n                default: 'monthly'\n            },\n            showTermsLinks: {\n                type: 'boolean',\n                default: true\n            },\n            termsUrl: {\n                type: 'string',\n                default: '/terms-of-service'\n            },\n            privacyUrl: {\n                type: 'string',\n                default: '/privacy-policy'\n            },\n            alignment: {\n                type: 'string',\n                default: 'center'\n            },\n            maxWidth: {\n                type: 'number',\n                default: 600\n            },\n            className: {\n                type: 'string',\n                default: ''\n            }\n        },\n        \n        edit: function(props) {\n            const { attributes, setAttributes, className } = props;\n            const [apiStatus, setApiStatus] = useState('checking');\n            const [products, setProducts] = useState(null);\n            const [testingConnection, setTestingConnection] = useState(false);\n            \n            // Check API status on load\n            useEffect(() => {\n                checkApiStatus();\n                loadProducts();\n            }, []);\n            \n            const checkApiStatus = async () => {\n                try {\n                    const response = await apiFetch({\n                        path: '/phynite-signup/v1/test-connection',\n                        method: 'GET'\n                    });\n                    \n                    setApiStatus(response && response.success ? 'connected' : 'error');\n                } catch (error) {\n                    console.error('API status check failed:', error);\n                    setApiStatus('error');\n                }\n            };\n            \n            const loadProducts = async () => {\n                try {\n                    const response = await apiFetch({\n                        path: '/phynite-signup/v1/get-products',\n                        method: 'GET'\n                    });\n                    \n                    setProducts(response || null);\n                } catch (error) {\n                    console.error('Failed to load products:', error);\n                    setProducts(null);\n                }\n            };\n            \n            const testConnection = async () => {\n                setTestingConnection(true);\n                try {\n                    await checkApiStatus();\n                    await loadProducts();\n                } catch (error) {\n                    console.error('Connection test failed:', error);\n                } finally {\n                    setTestingConnection(false);\n                }\n            };\n            \n            const formStyleOptions = [\n                { label: __('Default', 'phynite-signup-form'), value: 'default' },\n                { label: __('Minimal', 'phynite-signup-form'), value: 'minimal' },\n                { label: __('Modern', 'phynite-signup-form'), value: 'modern' },\n                { label: __('Compact', 'phynite-signup-form'), value: 'compact' },\n                { label: __('Card', 'phynite-signup-form'), value: 'card' }\n            ];\n            \n            const getStyleDescription = (style) => {\n                const descriptions = {\n                    'default': __('Balanced design with standard spacing and borders', 'phynite-signup-form'),\n                    'minimal': __('Clean and simple with underlines and lowercase typography', 'phynite-signup-form'),\n                    'modern': __('Contemporary style with gradients and elevated shadows', 'phynite-signup-form'),\n                    'compact': __('Space-saving design with smaller elements and tight spacing', 'phynite-signup-form'),\n                    'card': __('Professional card layout with distinct sections and backgrounds', 'phynite-signup-form')\n                };\n                return descriptions[style] || '';\n            };\n            \n            const alignmentOptions = [\n                { label: __('Left', 'phynite-signup-form'), value: 'left' },\n                { label: __('Center', 'phynite-signup-form'), value: 'center' },\n                { label: __('Right', 'phynite-signup-form'), value: 'right' }\n            ];\n            \n            const defaultPlanOptions = [\n                { label: __('Monthly', 'phynite-signup-form'), value: 'monthly' },\n                { label: __('Yearly', 'phynite-signup-form'), value: 'yearly' }\n            ];\n            \n            return el(Fragment, {},\n                // Inspector Controls (Sidebar)\n                el(InspectorControls, {},\n                    // API Status Panel\n                    el(PanelBody, {\n                        title: __('API Configuration', 'phynite-signup-form'),\n                        initialOpen: apiStatus === 'error'\n                    },\n                    apiStatus === 'checking' && el('div', { style: { display: 'flex', alignItems: 'center', gap: '8px' } },\n                        el(Spinner),\n                        el('span', {}, __('Checking API connection...', 'phynite-signup-form'))\n                    ),\n                        \n                    apiStatus === 'connected' && el(Notice, {\n                        status: 'success',\n                        isDismissible: false\n                    }, __('API connection successful', 'phynite-signup-form')),\n                        \n                    apiStatus === 'error' && el(Fragment, {},\n                        el(Notice, {\n                            status: 'error',\n                            isDismissible: false\n                        }, __('API not configured or connection failed. Please check the plugin settings.', 'phynite-signup-form')),\n                            \n                        el(Button, {\n                            isPrimary: true,\n                            href: '/wp-admin/options-general.php?page=phynite-signup-form',\n                            target: '_blank',\n                            style: { marginTop: '12px' }\n                        }, __('Open Settings', 'phynite-signup-form'))\n                    ),\n                        \n                    el(Button, {\n                        isSecondary: true,\n                        isBusy: testingConnection,\n                        disabled: testingConnection,\n                        onClick: testConnection,\n                        style: { marginTop: '12px' }\n                    }, __('Test Connection', 'phynite-signup-form'))\n                    ),\n                    \n                    // Content Panel\n                    el(PanelBody, {\n                        title: __('Form Content', 'phynite-signup-form'),\n                        initialOpen: true\n                    },\n                    el(ToggleControl, {\n                        label: __('Show Logo', 'phynite-signup-form'),\n                        checked: attributes.showLogo,\n                        onChange: (value) => setAttributes({ showLogo: value })\n                    }),\n                        \n                    el(ToggleControl, {\n                        label: __('Show Title', 'phynite-signup-form'),\n                        checked: attributes.showTitle,\n                        onChange: (value) => setAttributes({ showTitle: value })\n                    }),\n                        \n                    attributes.showTitle && el(TextControl, {\n                        label: __('Form Title', 'phynite-signup-form'),\n                        value: attributes.title,\n                        onChange: (value) => setAttributes({ title: value })\n                    }),\n                        \n                    el(ToggleControl, {\n                        label: __('Show Subtitle', 'phynite-signup-form'),\n                        checked: attributes.showSubtitle,\n                        onChange: (value) => setAttributes({ showSubtitle: value })\n                    }),\n                        \n                    attributes.showSubtitle && el(TextControl, {\n                        label: __('Form Subtitle', 'phynite-signup-form'),\n                        value: attributes.subtitle,\n                        onChange: (value) => setAttributes({ subtitle: value })\n                    }),\n                        \n                    el(TextControl, {\n                        label: __('Button Text', 'phynite-signup-form'),\n                        value: attributes.buttonText,\n                        onChange: (value) => setAttributes({ buttonText: value })\n                    })\n                    ),\n                    \n                    // Pricing Panel\n                    el(PanelBody, {\n                        title: __('Pricing Options', 'phynite-signup-form'),\n                        initialOpen: false\n                    },\n                    products && el('div', { style: { marginBottom: '16px', fontSize: '13px', color: '#757575' } },\n                        products.monthly && products.monthly.amount ? `Monthly: $${products.monthly.amount / 100}` : '', \n                        products.monthly && products.yearly && products.monthly.amount && products.yearly.amount ? ' | ' : '',\n                        products.yearly && products.yearly.amount ? `Yearly: $${products.yearly.amount / 100}` : ''\n                    ),\n                        \n                    el(ToggleControl, {\n                        label: __('Show Plan Selection', 'phynite-signup-form'),\n                        help: __('Allow users to choose between monthly and yearly plans', 'phynite-signup-form'),\n                        checked: attributes.showPlanSelection,\n                        onChange: (value) => setAttributes({ showPlanSelection: value })\n                    }),\n                        \n                    !attributes.showPlanSelection && el(SelectControl, {\n                        label: __('Default Plan', 'phynite-signup-form'),\n                        value: attributes.defaultPlan,\n                        options: defaultPlanOptions,\n                        onChange: (value) => setAttributes({ defaultPlan: value })\n                    })\n                    ),\n                    \n                    // Style Panel\n                    el(PanelBody, {\n                        title: __('Appearance', 'phynite-signup-form'),\n                        initialOpen: false\n                    },\n                    el(SelectControl, {\n                        label: __('Form Style', 'phynite-signup-form'),\n                        value: attributes.formStyle,\n                        options: formStyleOptions,\n                        onChange: (value) => setAttributes({ formStyle: value }),\n                        help: getStyleDescription(attributes.formStyle)\n                    }),\n                        \n                    el(SelectControl, {\n                        label: __('Alignment', 'phynite-signup-form'),\n                        value: attributes.alignment,\n                        options: alignmentOptions,\n                        onChange: (value) => setAttributes({ alignment: value })\n                    }),\n                        \n                    el(RangeControl, {\n                        label: __('Maximum Width (px)', 'phynite-signup-form'),\n                        value: attributes.maxWidth,\n                        onChange: (value) => setAttributes({ maxWidth: value }),\n                        min: 300,\n                        max: 1200,\n                        step: 50\n                    }),\n                        \n                    el('div', { style: { marginBottom: '16px' } },\n                        el('label', { style: { fontWeight: '600', marginBottom: '8px', display: 'block' } }, \n                            __('Primary Color', 'phynite-signup-form')\n                        ),\n                        el(ColorPicker, {\n                            color: attributes.primaryColor,\n                            onChange: (value) => setAttributes({ primaryColor: value })\n                        })\n                    )\n                    ),\n                    \n                    // Legal Panel\n                    el(PanelBody, {\n                        title: __('Terms & Privacy', 'phynite-signup-form'),\n                        initialOpen: false\n                    },\n                    el(ToggleControl, {\n                        label: __('Show Terms & Privacy Links', 'phynite-signup-form'),\n                        checked: attributes.showTermsLinks,\n                        onChange: (value) => setAttributes({ showTermsLinks: value })\n                    }),\n                        \n                    attributes.showTermsLinks && el(Fragment, {},\n                        el(TextControl, {\n                            label: __('Terms of Service URL', 'phynite-signup-form'),\n                            value: attributes.termsUrl,\n                            onChange: (value) => setAttributes({ termsUrl: value }),\n                            help: __('Relative or absolute URL to your terms page', 'phynite-signup-form')\n                        }),\n                            \n                        el(TextControl, {\n                            label: __('Privacy Policy URL', 'phynite-signup-form'),\n                            value: attributes.privacyUrl,\n                            onChange: (value) => setAttributes({ privacyUrl: value }),\n                            help: __('Relative or absolute URL to your privacy policy page', 'phynite-signup-form')\n                        })\n                    )\n                    )\n                ),\n                \n                // Block Content\n                el('div', { \n                    className: `phynite-signup-form-block-wrapper ${className || ''}`,\n                    style: { \n                        textAlign: attributes.alignment,\n                        '--primary-color': attributes.primaryColor\n                    }\n                },\n                apiStatus === 'error' ? \n                    el('div', {\n                        className: 'phynite-signup-form-placeholder',\n                        style: {\n                            padding: '40px',\n                            border: '2px dashed #ddd',\n                            borderRadius: '8px',\n                            textAlign: 'center',\n                            backgroundColor: '#f9f9f9'\n                        }\n                    },\n                    el('div', {\n                        style: {\n                            fontSize: '16px',\n                            marginBottom: '12px',\n                            color: '#d63638'\n                        }\n                    }, '⚠️ ' + __('Phynite Signup Form', 'phynite-signup-form')),\n                            \n                    el('p', {\n                        style: {\n                            margin: '0 0 16px',\n                            color: '#757575'\n                        }\n                    }, __('API configuration required. Please configure your Stewie API key in the plugin settings.', 'phynite-signup-form')),\n                            \n                    el(Button, {\n                        isPrimary: true,\n                        href: '/wp-admin/options-general.php?page=phynite-signup-form',\n                        target: '_blank'\n                    }, __('Configure Settings', 'phynite-signup-form'))\n                    )\n                    :\n                    el('div', {\n                        className: 'phynite-signup-form-preview-container',\n                        style: {\n                            border: '1px solid #ddd',\n                            borderRadius: '4px',\n                            overflow: 'hidden'\n                        }\n                    },\n                    el('div', {\n                        style: {\n                            padding: '10px',\n                            backgroundColor: '#f0f0f1',\n                            borderBottom: '1px solid #ddd',\n                            fontSize: '12px',\n                            color: '#666',\n                            textAlign: 'center'\n                        }\n                    }, __('Live Preview', 'phynite-signup-form')),\n                    \n                    ServerSideRender && el(ServerSideRender, {\n                        block: 'phynite/signup-form',\n                        attributes: attributes,\n                        className: 'phynite-block-server-preview',\n                        LoadingResponsePlaceholder: () => el('div', {\n                            style: {\n                                padding: '40px',\n                                textAlign: 'center',\n                                color: '#666'\n                            }\n                        }, el(Spinner), ' ', __('Loading preview...', 'phynite-signup-form')),\n                        ErrorResponsePlaceholder: ({ response }) => el('div', {\n                            style: {\n                                padding: '20px',\n                                textAlign: 'center',\n                                color: '#d63638',\n                                backgroundColor: '#fcf0f1'\n                            }\n                        }, \n                        el('p', {}, __('Preview Error:', 'phynite-signup-form')),\n                        el('code', { style: { fontSize: '11px' } }, (response && response.message) || __('Unable to render preview', 'phynite-signup-form'))\n                        ),\n                        EmptyResponsePlaceholder: () => el('div', {\n                            style: {\n                                padding: '20px',\n                                textAlign: 'center',\n                                color: '#666'\n                            }\n                        }, __('No content to preview', 'phynite-signup-form'))\n                    })\n                    )\n                )\n            );\n        },\n        \n        save: function() {\n            // Server-side rendered block\n            return null;\n        }\n    });\n    \n})(window.wp);"],"names":["wp","blocks","element","components","blockEditor","apiFetch","i18n","serverSideRender","registerBlockType","createElement","el","Fragment","useState","useEffect","PanelBody","TextControl","ToggleControl","SelectControl","ColorPicker","RangeControl","Notice","Button","Spinner","InspectorControls","BlockControls","__","ServerSideRender","title","description","icon","category","keywords","supports","align","className","customClassName","attributes","type","default","subtitle","showTitle","showSubtitle","showLogo","formStyle","primaryColor","buttonText","showPlanSelection","defaultPlan","showTermsLinks","termsUrl","privacyUrl","alignment","maxWidth","edit","props","setAttributes","apiStatus","setApiStatus","products","setProducts","testingConnection","setTestingConnection","checkApiStatus","loadProducts","async","response","path","method","success","error","console","formStyleOptions","label","value","alignmentOptions","defaultPlanOptions","initialOpen","style","display","alignItems","gap","status","isDismissible","isPrimary","href","target","marginTop","isSecondary","isBusy","disabled","onClick","checked","onChange","marginBottom","fontSize","color","monthly","amount","yearly","help","options","min","max","step","fontWeight","textAlign","padding","border","borderRadius","backgroundColor","margin","overflow","borderBottom","block","LoadingResponsePlaceholder","ErrorResponsePlaceholder","message","EmptyResponsePlaceholder","save","window"],"sourceRoot":""}